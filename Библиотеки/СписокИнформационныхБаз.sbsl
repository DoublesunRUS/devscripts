/*******************************************************************************
 * Copyright (c) 2020 Alexander Kapralov and Contributors
 * This program and the accompanying materials are made available under
 * the terms of the BSD 3-Clause License which is available at
 * https://spdx.org/licenses/BSD-3-Clause.html#licenseText
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * Contributors:
 *    
 *
 ******************************************************************************/

перечисление ОперационныеСистемы
    Windows,
    MacOS,
    Linux
;

перечисление ClientConnectionSpeed
    Normal,
    Low
;

перечисление WA
    OS,
    Login
;

перечисление App
    Auto,
    ThinClient,
    ThickClient,
    WebClient
;


структура ОписаниеБазы
    пер connect: Строка = ""
    пер id: Ууид
    пер folder: Строка = ""
    пер clientConnectionSpeed: ClientConnectionSpeed = ClientConnectionSpeed.Normal
    пер wa: WA = WA.Login
    пер app: App = App.Auto
    пер version: Строка = ""
    пер additionalParameters: Строка = ""

    знч __свойства: Массив = ["connect", "id", "folder", "clientConnectionSpeed", "wa", "app", "version", "additionalParameters"]

    конструктор()
;


метод ИспользуемаяОС(): ОперационныеСистемы
    пер имяОС = СредаИсполнения.ПолучитьСвойство("os.name")

    выбор
    когда имяОС.НачинаетсяС("windows", Истина)
        возврат ОперационныеСистемы.Windows

    когда имяОС.Содержит("mac", Истина)
        возврат ОперационныеСистемы.MacOS

    когда имяОС.Содержит("nux", Истина)
        возврат ОперационныеСистемы.Linux

    иначе
        выбросить новый ИсключениеНедопустимоеСостояние("Неизвестная ОС")
    ;
;

метод ПутьКСпискуБаз(): Строка
    пер текущаяОС = ИспользуемаяОС()

    пер путьКСпискуБаз = Файлы.ПолучитьДомашнийКаталог().Путь

    выбор текущаяОС
    когда ОперационныеСистемы.Windows
        путьКСпискуБаз += "/1C/1CEStart/"

    когда ОперационныеСистемы.MacOS
        путьКСпискуБаз += "/.1C/1cestart/"

    когда ОперационныеСистемы.Linux
        путьКСпискуБаз += "/.1C/1cestart/"
    иначе
        выбросить новый ИсключениеНедопустимоеСостояние("Неподдерживаемая ОС")
    ;

    возврат путьКСпискуБаз
;

метод СписокБаз(): Соответствие
    пер списокБаз: Соответствие

    знч файлСпискаБаз = новый Файл(ПутьКСпискуБаз() + "ibases.v8i")

    знч данныеСпискаБаз = новый ЧтениеДанных(файлСпискаБаз.ОткрытьПотокЧтения())

    данныеСпискаБаз.ПрочитатьСтроку(, "[")
    пока не данныеСпискаБаз.ЧтениеЗавершено()
        знч описаниеБазыСтрокой = данныеСпискаБаз.ПрочитатьСтроку(, "[")

        знч имяИПараметрыБазы = описаниеБазыСтрокой.Разделить("]", Ложь)

        знч имяБазы = имяИПараметрыБазы[0]
        знч параметрыБазы = имяИПараметрыБазы[1].Разделить("\в\н", Ложь)

        пер описаниеБазы = новый ОписаниеБазы()

        для параметрБазы из параметрыБазы
            знч позицияРазделителя = параметрБазы.Найти("=")

            знч имяПараметра = параметрБазы.ПодстрокаСНачала(позицияРазделителя)
            знч значениеПараметра = параметрБазы.Подстрока(позицияРазделителя + 1)

            выбор имяПараметра
            когда "Connect"
                описаниеБазы.connect = значениеПараметра

            когда "ID"
                описаниеБазы.id = новый Ууид(значениеПараметра)

            когда "OrderInList"
            // Нечего делать
            когда "Folder"
                описаниеБазы.folder = значениеПараметра

            когда "OrderInTree"
            // Нечего делать
            когда "External"
            // Нечего делать
            когда "ClientConnectionSpeed"
                выбор значениеПараметра
                когда "Normal"
                    описаниеБазы.clientConnectionSpeed = ClientConnectionSpeed.Normal
                когда "Low"
                    описаниеБазы.clientConnectionSpeed = ClientConnectionSpeed.Low
                иначе
                    выбросить новый ИсключениеНедопустимоеСостояние(
                        "Неизвестный ClientConnectionSpeed: %значениеПараметра")
            ;

            когда "App"
                выбор значениеПараметра
                когда "Auto"
                    описаниеБазы.app = App.Auto
                когда "ThickClient"
                    описаниеБазы.app = App.ThickClient
                когда "ThinClient"
                    описаниеБазы.app = App.ThinClient
                когда "WebClient"
                    описаниеБазы.app = App.WebClient
                иначе
                    выбросить новый ИсключениеНедопустимоеСостояние("Неизвестный App: %значениеПараметра")
            ;

            когда "WA"
                выбор значениеПараметра
                когда "0"
                    описаниеБазы.wa = WA.Login
                когда "1"
                    описаниеБазы.wa = WA.OS
                иначе
                    выбросить новый ИсключениеНедопустимоеСостояние(
                        "Неизвестный ClientConnectionSpeed: %значениеПараметра")
            ;

            когда "Version"
                описаниеБазы.version = значениеПараметра

            когда "AdditionalParameters"
                описаниеБазы.additionalParameters = значениеПараметра

            когда "DefaultApp"
            // Нечего делать
            когда "AppArch"
            // Нечего делать
            когда "DefaultVersion"
            // Нечего делать
            иначе
                выбросить новый ИсключениеНедопустимоеСостояние("Неизвестный параметр: %имяПараметра")
            ;
        ;

        списокБаз.Вставить(имяБазы, описаниеБазы)
    ;

    возврат списокБаз
;

метод ИспользуемыеВерсии()
    знч списокБаз = СписокБаз()

    пер списокВерсий = новый Массив()

    для база из списокБаз
        знч версия = база.Значение.version

        если списокВерсий.Содержит(версия) или версия == ""
        продолжить
        ;

        списокВерсий.Добавить(версия)
    ;

    для версия из списокВерсий
        Консоль.Записать(версия)
    ;
;

метод ДоступныеБазы()
    знч списокБаз = СписокБаз()

    для база из списокБаз
        Консоль.Записать(база.Ключ)

        знч описаниеБазы: ОписаниеБазы = база.Значение

        для параметр из описаниеБазы.__свойства
            Консоль.Записать("    " + параметр + "|" + описаниеБазы[параметр])
        ;
    ;
;