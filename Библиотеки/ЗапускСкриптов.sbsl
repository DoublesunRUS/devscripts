/*******************************************************************************
 * Copyright (c) 2020 Alexander Kapralov and Contributors
 * This program and the accompanying materials are made available under
 * the terms of the BSD 3-Clause License which is available at
 * https://spdx.org/licenses/BSD-3-Clause.html#licenseText
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * Contributors:
 *    
 *
 ******************************************************************************/

/* 
 * Методы для вызова других скриптов. Необходимо копировать в свой скрипт
 */
 
метод ВыполнитьСкрипт(имяФайлаСкрипта: Строка, имяКомандыСкрипта: Строка, параметрыСкрипта: Массив): ПотокЧтения
    знч путьКИсполнителю = СредаИсполнения.ПолучитьСвойство("logback.configurationFile").Удалить("config/logback.xml")
        + "/bin/executor_j11.sh"

    пер аргументыПроцессаОс = ["-s", имяФайлаСкрипта, "-m", имяКомандыСкрипта]
    если не параметрыСкрипта.Пусто()
        аргументыПроцессаОс.ДобавитьВсе(параметрыСкрипта)
    ;

    знч библиотека = новый ПроцессОс(путьКИсполнителю, аргументыПроцессаОс, Ложь)

    библиотека.Запустить()

    знч ошибкиВыполненияСкрипта = новый ЧтениеДанных(библиотека.ПотокОшибок)
    пер списокОшибок: Массив
    пока не ошибкиВыполненияСкрипта.ЧтениеЗавершено()
        знч прочитаннаяСтрока = ошибкиВыполненияСкрипта.ПрочитатьСтроку()
        если прочитаннаяСтрока == ""
        продолжить
        ;

        списокОшибок.Добавить(прочитаннаяСтрока)
    ;
    если не списокОшибок.Пусто()
        знч текстОшибки = Строки.Соединить(списокОшибок, "\в\н")
        выбросить новый ИсключениеНедопустимоеСостояние(текстОшибки)
    ;

    возврат библиотека.ПотокВывода
;

метод ОбъектИзПотокаВывода(потокВывода: ПотокЧтения): Строка|Соответствие|Массив
    пер результаты: Массив
    знч результатВыполненияСкрипта = новый ЧтениеДанных(потокВывода)
    пока не результатВыполненияСкрипта.ЧтениеЗавершено()
        знч прочитаннаяСтрока = результатВыполненияСкрипта.ПрочитатьСтроку()

        если прочитаннаяСтрока == ""
        продолжить
        ;

        знч объект = ОбъектИзСтроки(прочитаннаяСтрока)

        результаты.Добавить(объект)
    ;

    если результаты.Размер() == 1
        возврат результаты[0]
    ;

    возврат результаты
;

метод ОбъектИзСтроки(строкаПотокаВывода: Строка): Строка|Соответствие
    пер соответствиеПотокаВывода: Соответствие

    знч этоСоответствие = строкаПотокаВывода[0] == "{"
    если не этоСоответствие
        возврат строкаПотокаВывода
    ;

    возврат соответствиеПотокаВывода
;