/*******************************************************************************
 * Copyright (c) 2020 Alexander Kapralov and Contributors
 * This program and the accompanying materials are made available under
 * the terms of the BSD 3-Clause License which is available at
 * https://spdx.org/licenses/BSD-3-Clause.html#licenseText
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * Contributors:
 *    
 *
 ******************************************************************************/

метод Git_Clone(адресРепозитория: Строка, веткаРепозитория: Строка)
	пер параметрыПроцесса = новый Массив()
	параметрыПроцесса.Добавить("clone")
	параметрыПроцесса.Добавить("--quiet")
	параметрыПроцесса.Добавить("--single-branch")
	параметрыПроцесса.Добавить("--branch")
	параметрыПроцесса.Добавить(веткаРепозитория)
	параметрыПроцесса.Добавить(адресРепозитория)

	знч процесс = новый ПроцессОс("git", параметрыПроцесса)
	процесс.Запустить()
	процесс.ОжидатьЗавершения()

	пер результатВыполненияСкрипта = процесс.ПолучитьПотокВывода()
	знч текстРезультата = результатВыполненияСкрипта.ПрочитатьКакТекст()
	если не текстРезультата.Пусто()
		Консоль.Записать(текстРезультата)
	;

	знч кодВозврата = процесс.ПолучитьКодВозврата()

	если кодВозврата == 0
		Консоль.Записать("Репозиторий успешно склонирован.")
	возврат
	;

	пер текстОшибки = Строки.Шаблон("Код возврата: $0", кодВозврата)

	текстОшибки += Строки.Шаблон("\в\н$0\в\нgit $0", Строки.Соединить(параметрыПроцесса, " "))

	выбросить новый ИсключениеНедопустимоеСостояние(текстОшибки)
;