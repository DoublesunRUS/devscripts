#!/usr/bin/executor

/*******************************************************************************
 * Copyright (c) 2020 Alexander Kapralov and Contributors
 * This program and the accompanying materials are made available under
 * the terms of the BSD 3-Clause License which is available at
 * https://spdx.org/licenses/BSD-3-Clause.html#licenseText
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * Contributors:
 *    
 *
 ******************************************************************************/

метод CreateInfobase(путьКИБ: Строка, имяФайлаПлатформы: Строка)
	пер параметрыПроцесса = новый Массив()
	параметрыПроцесса.Добавить("CREATEINFOBASE")
	параметрыПроцесса.Добавить("File=\"%путьКИБ\"")

	ВыполнитьКомандуПлатформы(имяФайлаПлатформы, параметрыПроцесса)
	Консоль.Записать("ИБ успешно создана.")
;

метод CreateInfobaseFromTemplate(путьКДТ: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка)
	пер параметрыПроцесса = новый Массив()
	параметрыПроцесса.Добавить("CREATEINFOBASE")
	параметрыПроцесса.Добавить("File=\"%путьКИБ\"")
	параметрыПроцесса.Добавить("/UseTemplate")
	параметрыПроцесса.Добавить(путьКДТ)

	ВыполнитьКомандуПлатформы(имяФайлаПлатформы, параметрыПроцесса)
	Консоль.Записать("ИБ успешно создана.")
;

метод LoadConfigFromFiles(путьКФайламКонфигурации: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка,
	имяПользователя: Строка = "", пароль: Строка = "")
	пер параметрыПроцесса = новый Массив()
	параметрыПроцесса.Добавить("DESIGNER")
	параметрыПроцесса.Добавить("/LoadConfigFromFiles")
	параметрыПроцесса.Добавить(путьКФайламКонфигурации)
	параметрыПроцесса.Добавить("/IBConnectionString")
	параметрыПроцесса.Добавить("File=\"%путьКИБ\"")
	параметрыПроцесса.Добавить("/DisableStartupDialogs")
	параметрыПроцесса.Добавить("/WA-")
	если не имяПользователя.Пусто()
		параметрыПроцесса.Добавить("/N")
		параметрыПроцесса.Добавить("\"%имяПользователя\"")
	;
	если не пароль.Пусто()
		параметрыПроцесса.Добавить("/P")
		параметрыПроцесса.Добавить(пароль)
	;

	ВыполнитьКомандуПлатформы(имяФайлаПлатформы, параметрыПроцесса)
	Консоль.Записать("XML файлы конфигурации успешно загружены в ИБ.")
;

метод LoadCfg(путьКФайлуCF: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка, имяПользователя: Строка = "",
	пароль: Строка = "")
	пер параметрыПроцесса = новый Массив()
	параметрыПроцесса.Добавить("DESIGNER")
	параметрыПроцесса.Добавить("/LoadCfg")
	параметрыПроцесса.Добавить(путьКФайлуCF)
	параметрыПроцесса.Добавить("-force")
	параметрыПроцесса.Добавить("/IBConnectionString")
	параметрыПроцесса.Добавить("File=\"%путьКИБ\"")
	параметрыПроцесса.Добавить("/DisableStartupDialogs")
	параметрыПроцесса.Добавить("/WA-")
	если не имяПользователя.Пусто()
		параметрыПроцесса.Добавить("/N")
		параметрыПроцесса.Добавить("\"%имяПользователя\"")
	;
	если не пароль.Пусто()
		параметрыПроцесса.Добавить("/P")
		параметрыПроцесса.Добавить(пароль)
	;

	ВыполнитьКомандуПлатформы(имяФайлаПлатформы, параметрыПроцесса)
	Консоль.Записать("CF файл конфигурации успешно загружен в ИБ.")
;

метод UpdateDBCfg(путьКИБ: Строка, имяФайлаПлатформы: Строка, имяПользователя: Строка = "", пароль: Строка = "")
	пер параметрыПроцесса = новый Массив()
	параметрыПроцесса.Добавить("DESIGNER")
	параметрыПроцесса.Добавить("/UpdateDBCfg")
	параметрыПроцесса.Добавить("/IBConnectionString")
	параметрыПроцесса.Добавить("File=\"%путьКИБ\"")
	параметрыПроцесса.Добавить("/DisableStartupDialogs")
	параметрыПроцесса.Добавить("/WA-")
	если не имяПользователя.Пусто()
		параметрыПроцесса.Добавить("/N")
		параметрыПроцесса.Добавить("\"%имяПользователя\"")
	;
	если не пароль.Пусто()
		параметрыПроцесса.Добавить("/P")
		параметрыПроцесса.Добавить(пароль)
	;

	ВыполнитьКомандуПлатформы(имяФайлаПлатформы, параметрыПроцесса)
	Консоль.Записать("Конфигурация БД успешно обновлена для конфигурации в ИБ.")
;

метод CreateDistributionFiles(путьКФайлуCF: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка,
	имяПользователя: Строка = "", пароль: Строка = "")
	пер параметрыПроцесса = новый Массив()
	параметрыПроцесса.Добавить("DESIGNER")
	параметрыПроцесса.Добавить("/CreateDistributionFiles")
	параметрыПроцесса.Добавить("-cffile")
	параметрыПроцесса.Добавить(путьКФайлуCF)
	параметрыПроцесса.Добавить("/IBConnectionString")
	параметрыПроцесса.Добавить("File=\"%путьКИБ\"")
	параметрыПроцесса.Добавить("/DisableStartupDialogs")
	параметрыПроцесса.Добавить("/WA-")
	если не имяПользователя.Пусто()
		параметрыПроцесса.Добавить("/N")
		параметрыПроцесса.Добавить("\"%имяПользователя\"")
	;
	если не пароль.Пусто()
		параметрыПроцесса.Добавить("/P")
		параметрыПроцесса.Добавить(пароль)
	;

	ВыполнитьКомандуПлатформы(имяФайлаПлатформы, параметрыПроцесса)
	Консоль.Записать("CF Файл поставки успешно создан.")
;

метод LoadExtFromFiles(путьКФайламРасширения: Строка, имяРасширения: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка,
	имяПользователя: Строка = "", пароль: Строка = "")
	пер параметрыПроцесса = новый Массив()
	параметрыПроцесса.Добавить("DESIGNER")
	параметрыПроцесса.Добавить("/LoadConfigFromFiles")
	параметрыПроцесса.Добавить(путьКФайламРасширения)
	параметрыПроцесса.Добавить("-Extension")
	параметрыПроцесса.Добавить(имяРасширения)
	параметрыПроцесса.Добавить("/IBConnectionString")
	параметрыПроцесса.Добавить("File=\"%путьКИБ\"")
	параметрыПроцесса.Добавить("/DisableStartupDialogs")
	параметрыПроцесса.Добавить("/WA-")
	если не имяПользователя.Пусто()
		параметрыПроцесса.Добавить("/N")
		параметрыПроцесса.Добавить("\"%имяПользователя\"")
	;
	если не пароль.Пусто()
		параметрыПроцесса.Добавить("/P")
		параметрыПроцесса.Добавить(пароль)
	;

	ВыполнитьКомандуПлатформы(имяФайлаПлатформы, параметрыПроцесса)
	Консоль.Записать("XML файлы расширения успешно загружены в ИБ.")
;

метод LoadExt(путьКФайлуCFE: Строка, имяРасширения: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка,
	имяПользователя: Строка = "", пароль: Строка = "")
	пер параметрыПроцесса = новый Массив()
	параметрыПроцесса.Добавить("DESIGNER")
	параметрыПроцесса.Добавить("/LoadCfg")
	параметрыПроцесса.Добавить(путьКФайлуCFE)
	параметрыПроцесса.Добавить("-Extension")
	параметрыПроцесса.Добавить(имяРасширения)
	параметрыПроцесса.Добавить("-force")
	параметрыПроцесса.Добавить("/IBConnectionString")
	параметрыПроцесса.Добавить("File=\"%путьКИБ\"")
	параметрыПроцесса.Добавить("/DisableStartupDialogs")
	параметрыПроцесса.Добавить("/WA-")
	если не имяПользователя.Пусто()
		параметрыПроцесса.Добавить("/N")
		параметрыПроцесса.Добавить("\"%имяПользователя\"")
	;
	если не пароль.Пусто()
		параметрыПроцесса.Добавить("/P")
		параметрыПроцесса.Добавить(пароль)
	;

	ВыполнитьКомандуПлатформы(имяФайлаПлатформы, параметрыПроцесса)
	Консоль.Записать("CFE файл расширения успешно загружен в ИБ.")
;

метод UpdateDBExt(имяРасширения: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка, имяПользователя: Строка = "",
	пароль: Строка = "")
	пер параметрыПроцесса = новый Массив()
	параметрыПроцесса.Добавить("DESIGNER")
	параметрыПроцесса.Добавить("/UpdateDBCfg")
	параметрыПроцесса.Добавить("-Extension")
	параметрыПроцесса.Добавить(имяРасширения)
	параметрыПроцесса.Добавить("/IBConnectionString")
	параметрыПроцесса.Добавить("File=\"%путьКИБ\"")
	параметрыПроцесса.Добавить("/DisableStartupDialogs")
	параметрыПроцесса.Добавить("/WA-")
	если не имяПользователя.Пусто()
		параметрыПроцесса.Добавить("/N")
		параметрыПроцесса.Добавить("\"%имяПользователя\"")
	;
	если не пароль.Пусто()
		параметрыПроцесса.Добавить("/P")
		параметрыПроцесса.Добавить(пароль)
	;

	ВыполнитьКомандуПлатформы(имяФайлаПлатформы, параметрыПроцесса)
	Консоль.Записать("Конфигурация БД успешно обновлена для расширения в ИБ.")
;

метод DumpExt(путьКФайлуCFE: Строка, имяРасширения: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка,
	имяПользователя: Строка = "", пароль: Строка = "")
	пер параметрыПроцесса = новый Массив()
	параметрыПроцесса.Добавить("DESIGNER")
	параметрыПроцесса.Добавить("/DumpCfg")
	параметрыПроцесса.Добавить(путьКФайлуCFE)
	параметрыПроцесса.Добавить("-Extension")
	параметрыПроцесса.Добавить(имяРасширения)
	параметрыПроцесса.Добавить("/IBConnectionString")
	параметрыПроцесса.Добавить("File=\"%путьКИБ\"")
	параметрыПроцесса.Добавить("/DisableStartupDialogs")
	параметрыПроцесса.Добавить("/WA-")
	если не имяПользователя.Пусто()
		параметрыПроцесса.Добавить("/N")
		параметрыПроцесса.Добавить("\"%имяПользователя\"")
	;
	если не пароль.Пусто()
		параметрыПроцесса.Добавить("/P")
		параметрыПроцесса.Добавить(пароль)
	;

	ВыполнитьКомандуПлатформы(имяФайлаПлатформы, параметрыПроцесса)
	Консоль.Записать("CFE Файл расширения успешно создан.")
;

метод DeleteCfgAllExt(путьКИБ: Строка, имяФайлаПлатформы: Строка, имяПользователя: Строка = "", пароль: Строка =
	"")
	пер параметрыПроцесса = новый Массив()
	параметрыПроцесса.Добавить("DESIGNER")
	параметрыПроцесса.Добавить("/DeleteCfg")
	параметрыПроцесса.Добавить("-AllExtensions")
	параметрыПроцесса.Добавить("/IBConnectionString")
	параметрыПроцесса.Добавить("File=\"%путьКИБ\"")
	параметрыПроцесса.Добавить("/DisableStartupDialogs")
	параметрыПроцесса.Добавить("/WA-")
	если не имяПользователя.Пусто()
		параметрыПроцесса.Добавить("/N")
		параметрыПроцесса.Добавить("\"%имяПользователя\"")
	;
	если не пароль.Пусто()
		параметрыПроцесса.Добавить("/P")
		параметрыПроцесса.Добавить(пароль)
	;

	ВыполнитьКомандуПлатформы(имяФайлаПлатформы, параметрыПроцесса)
	Консоль.Записать("Конфигурация и все расширения удалены из ИБ.")
;

метод ExecuteCommand(именаКоманд: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка, имяПользователя: Строка = "",
	пароль: Строка = "")
	пер параметрыПроцесса = новый Массив()
	параметрыПроцесса.Добавить("ENTERPRISE")
	параметрыПроцесса.Добавить("/C")
	параметрыПроцесса.Добавить(именаКоманд)
	параметрыПроцесса.Добавить("/AllowExecuteScheduledJobs")
	параметрыПроцесса.Добавить("-Off")
	параметрыПроцесса.Добавить("/IBConnectionString")
	параметрыПроцесса.Добавить("File=\"%путьКИБ\"")
	параметрыПроцесса.Добавить("/DisableStartupDialogs")
	параметрыПроцесса.Добавить("/WA-")
	если не имяПользователя.Пусто()
		параметрыПроцесса.Добавить("/N")
		параметрыПроцесса.Добавить("\"%имяПользователя\"")
	;
	если не пароль.Пусто()
		параметрыПроцесса.Добавить("/P")
		параметрыПроцесса.Добавить(пароль)
	;

	ВыполнитьКомандуПлатформы(имяФайлаПлатформы, параметрыПроцесса)
	Консоль.Записать("Команда выполнена.")
;

метод ExecuteDataProcessor(имяВнешнейОбработки: Строка, вспомогательныеПараметры: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка,
	имяПользователя: Строка = "", пароль: Строка = "")
	пер параметрыПроцесса = новый Массив()
	параметрыПроцесса.Добавить("ENTERPRISE")
	параметрыПроцесса.Добавить("/Execute")
	параметрыПроцесса.Добавить(имяВнешнейОбработки)
	если не вспомогательныеПараметры.Пусто()
		параметрыПроцесса.Добавить("/C")
		параметрыПроцесса.Добавить(вспомогательныеПараметры)
	;
	параметрыПроцесса.Добавить("/IBConnectionString")
	параметрыПроцесса.Добавить("File=\"%путьКИБ\"")
	параметрыПроцесса.Добавить("/DisableStartupDialogs")
	параметрыПроцесса.Добавить("/WA-")
	если не имяПользователя.Пусто()
		параметрыПроцесса.Добавить("/N")
		параметрыПроцесса.Добавить("\"%имяПользователя\"")
	;
	если не пароль.Пусто()
		параметрыПроцесса.Добавить("/P")
		параметрыПроцесса.Добавить(пароль)
	;

	ВыполнитьКомандуПлатформы(имяФайлаПлатформы, параметрыПроцесса)
	Консоль.Записать("Обработка запущена.")
;

перечисление ОперационныеСистемы
	Windows,
	MacOS,
	Linux
;


метод ИспользуемаяОС(): ОперационныеСистемы
	знч имяОС = СредаИсполнения.ПолучитьСвойство("os.name")

	выбор когда имяОС.НачинаетсяС("windows", Истина)
		возврат ОперационныеСистемы.Windows

	когда имяОС.Содержит("mac", Истина)
		возврат ОперационныеСистемы.MacOS

	когда имяОС.Содержит("nux", Истина)
		возврат ОперационныеСистемы.Linux

	иначе
		выбросить новый ИсключениеНедопустимоеСостояние("Неизвестная ОС")
	;
;

метод КодировкаПотокаВыводаПлатформы(): Строка
	если ИспользуемаяОС() == ОперационныеСистемы.Windows
		возврат "windows-1251"
	;

	возврат "UTF-8"
;

метод ВыполнитьКомандуПлатформы(имяКоманды: Строка, параметры: Массив, выводитьОшибки: Булево = Истина)
	знч временныйФайлЛогов = Файлы.СоздатьВременныйФайл()

	параметры.Добавить("/Out")
	параметры.Добавить(временныйФайлЛогов.Путь)

	пер процесс = новый ПроцессОс(имяКоманды, параметры)
	процесс.Запустить()
	процесс.ОжидатьЗавершения()

	исп результатВыполненияСкрипта = процесс.ПолучитьПотокВывода()
	знч текстРезультата = результатВыполненияСкрипта.ПрочитатьКакТекст()
	если не текстРезультата.Пусто()
		Консоль.Записать(текстРезультата)
	;

	знч кодВозврата = процесс.ПолучитьКодВозврата()

	если кодВозврата == 0
	возврат
	;

	пер текстОшибки = "Код возврата: %кодВозврата"
	если не выводитьОшибки
		выбросить новый ИсключениеНедопустимоеСостояние(текстОшибки)
	;

	текстОшибки += Строки.Шаблон("\в\нКоманда: $0\в\нПараметры: $1", [имяКоманды, Строки.Соединить(параметры, " ")])

	исп ошибкиВыполненияСкрипта = временныйФайлЛогов.ОткрытьПотокЧтения()
	текстОшибки += "\в\н" + ошибкиВыполненияСкрипта.ПрочитатьКакТекст(КодировкаПотокаВыводаПлатформы())
	выбросить новый ИсключениеНедопустимоеСостояние(текстОшибки)
;
