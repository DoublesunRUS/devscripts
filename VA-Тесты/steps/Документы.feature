#language: ru

@tree
@ExportScenarios

Функциональность: Проверка Документов

Сценарий: Отсутствует право "ИмяПрава" для документа "ИмяДокумента"
	Если объект "Документ.[ИмяДокумента]" недоступен по функциональным опциям
		Тогда я останавливаю выполнение сценария "Skipped"

	Если есть право "ИмяПрава" к объекту "Документ.[ИмяДокумента]" тогда
		Тогда я вызываю исключение "Ошибочно установлено право [ИмяПрава] для документа [ИмяДокумента]"

Сценарий: Открытие формы списка документа "ИмяДокумента"
	Если объект "Документ.[ИмяДокумента]" недоступен по функциональным опциям
		Тогда я останавливаю выполнение сценария "Skipped"

	Если нет права "Просмотр" к объекту "Документ.[ИмяДокумента]" тогда
		Тогда я останавливаю выполнение сценария "Skipped"

	Дано я закрыл все окна клиентского приложения
	И я очищаю окно сообщений пользователю

	Дано я открываю основную форму списка документа "ИмяДокумента"
	Если появилось предупреждение тогда
		Тогда я вызываю исключение "Не удалось открыть форму списка документа [ИмяДокумента]"

	И я закрыл все окна клиентского приложения

Сценарий: Открытие формы существующего документа "ИмяДокумента"
	Если объект "Документ.[ИмяДокумента]" недоступен по функциональным опциям
		Тогда я останавливаю выполнение сценария "Skipped"

	Если нет права "Просмотр" к объекту "Документ.[ИмяДокумента]" тогда
		Тогда я останавливаю выполнение сценария "Skipped"

	Дано я ищу последние 5 документов "ИмяДокумента" по каждой организации в переменную "СписокДокументов"
	Если '$СписокДокументов$.Количество() = 0' Тогда
		Тогда я останавливаю выполнение сценария "Skipped"

	И для каждого значения "СсылкаДокумента" из массива "$СписокДокументов$"
		Дано я закрыл все окна клиентского приложения
		И я очищаю окно сообщений пользователю

		Тогда я запоминаю значение выражения 'ПолучитьНавигационнуюСсылку($СсылкаДокумента$)' в переменную "НавигационнаяСсылкаДокумента"
		Затем я открываю навигационную ссылку "$НавигационнаяСсылкаДокумента$"
		Если появилось предупреждение тогда
			Тогда я вызываю исключение "Не удалось открыть навигационную ссылку $НавигационнаяСсылкаДокумента$"

	И я закрыл все окна клиентского приложения

Сценарий: Открытие формы нового документа "ИмяДокумента"
	Если объект "Документ.[ИмяДокумента]" недоступен по функциональным опциям
		Тогда я останавливаю выполнение сценария "Skipped"

	Если нет права "ИнтерактивноеДобавление" к объекту "Документ.[ИмяДокумента]" тогда
		Тогда я останавливаю выполнение сценария "Skipped"

	Дано я закрыл все окна клиентского приложения
	И я очищаю окно сообщений пользователю

	Дано я открываю основную форму документа "ИмяДокумента"
	Если появилось предупреждение тогда
		Тогда я вызываю исключение "Не удалось открыть основную форму документа [ИмяДокумента]"

	И я закрыл все окна клиентского приложения

Сценарий: Перезапись существующего документа "ИмяДокумента"
	Если объект "Документ.[ИмяДокумента]" недоступен по функциональным опциям
		Тогда я останавливаю выполнение сценария "Skipped"

	Если нет права "Редактирование" к объекту "Документ.[ИмяДокумента]" тогда
		Тогда я останавливаю выполнение сценария "Skipped"

	Дано я ищу последние 5 документов "ИмяДокумента" по каждой организации в переменную "СписокДокументов"
	Если '$СписокДокументов$.Количество() = 0' Тогда
		Тогда я останавливаю выполнение сценария "Skipped"

	И для каждого значения "СсылкаДокумента" из массива "$СписокДокументов$"
		Дано я закрыл все окна клиентского приложения
		И я очищаю окно сообщений пользователю

		Тогда я запоминаю значение выражения 'ПолучитьНавигационнуюСсылку($СсылкаДокумента$)' в переменную "НавигационнаяСсылкаДокумента"
		Затем я открываю навигационную ссылку "$НавигационнаяСсылкаДокумента$"
		Если появилось предупреждение тогда
			Тогда я вызываю исключение "Не удалось открыть навигационную ссылку $НавигационнаяСсылкаДокумента$"
		И я нажимаю на кнопку "Записать и закрыть"
		Если появилось предупреждение тогда
			Тогда я вызываю исключение "Не удалось перезаписать документ $НавигационнаяСсылкаДокумента$"
		Если в текущем окне есть сообщения пользователю Тогда
			Тогда я вызываю исключение с текстом сообщения
	
	И я закрыл все окна клиентского приложения
	
Сценарий: Перепроведение существующего документа "ИмяДокумента"
	Если объект "Документ.[ИмяДокумента]" недоступен по функциональным опциям
		Тогда я останавливаю выполнение сценария "Skipped"

	Если нет права "ИнтерактивноеПроведение" к объекту "Документ.[ИмяДокумента]" тогда
		Тогда я останавливаю выполнение сценария "Skipped"

	Дано я ищу последние 5 документов "ИмяДокумента" по каждой организации в переменную "СписокДокументов"
	Если '$СписокДокументов$.Количество() = 0' Тогда
		Тогда я останавливаю выполнение сценария "Skipped"

	И для каждого значения "СсылкаДокумента" из массива "$СписокДокументов$"
		Дано я закрыл все окна клиентского приложения
		И я очищаю окно сообщений пользователю

		Тогда я запоминаю значение выражения 'ПолучитьНавигационнуюСсылку($СсылкаДокумента$)' в переменную "НавигационнаяСсылкаДокумента"
		Затем я открываю навигационную ссылку "$НавигационнаяСсылкаДокумента$"
		Если появилось предупреждение тогда
			Тогда я вызываю исключение "Не удалось открыть навигационную ссылку $НавигационнаяСсылкаДокумента$"
		И я нажимаю на кнопку "Провести и закрыть"
		Если появилось предупреждение тогда
			Тогда я вызываю исключение "Не удалось перепровести документ $НавигационнаяСсылкаДокумента$"
		Если в текущем окне есть сообщения пользователю Тогда
			Тогда я вызываю исключение с текстом сообщения
	
	И я закрыл все окна клиентского приложения
	
Сценарий: Исправление существующего документа "ИмяДокумента"
	Если объект "Документ.[ИмяДокумента]" недоступен по функциональным опциям
		Тогда я останавливаю выполнение сценария "Skipped"

	Если нет права "ИнтерактивноеДобавление" к объекту "Документ.[ИмяДокумента]" тогда
		Тогда я останавливаю выполнение сценария "Skipped"

	Дано я ищу последние 5 документов "ИмяДокумента" по каждой организации в переменную "СписокДокументов"
	Если '$СписокДокументов$.Количество() = 0' Тогда
		Тогда я останавливаю выполнение сценария "Skipped"
		
	И для каждого значения "СсылкаДокумента" из массива "$СписокДокументов$"
		Дано я закрыл все окна клиентского приложения
		И я очищаю окно сообщений пользователю

		Тогда я запоминаю значение выражения 'ПолучитьНавигационнуюСсылку($СсылкаДокумента$)' в переменную "НавигационнаяСсылкаДокумента"
		Затем я открываю навигационную ссылку "$НавигационнаяСсылкаДокумента$"
		Если появилось предупреждение тогда
			Тогда я вызываю исключение "Не удалось открыть навигационную ссылку $НавигационнаяСсылкаДокумента$"
		И я нажимаю на гиперссылку "Исправить"
		Если появилось предупреждение тогда
			Тогда я вызываю исключение "Не удалось исправить документ $НавигационнаяСсылкаДокумента$"
		Тогда открылось окно "*(создание)"
		Если появилось предупреждение тогда
			Тогда я вызываю исключение "Не удалось дождаться создания исправленного документа $НавигационнаяСсылкаДокумента$"
		И я нажимаю на кнопку "Провести"
		Если появилось предупреждение, содержащее текст "Перед записью документа необходимо провести перерасчет изменений" тогда
			Тогда я нажимаю на кнопку "Да"
		Если появилось предупреждение тогда
			Тогда я вызываю исключение "Не удалось записать и провести документ-исправление"
		Если в текущем окне есть сообщения пользователю Тогда
			Тогда я вызываю исключение с текстом сообщения
		И я нажимаю на кнопку "Пометить на удаление / Снять пометку"
		Затем Если появилось окно диалога я нажимаю на кнопку "Да"

	И я закрыл все окна клиентского приложения
		
Сценарий: Печать существующего документа "ИмяДокумента"
	Если объект "Документ.[ИмяДокумента]" недоступен по функциональным опциям
		Тогда я останавливаю выполнение сценария "Skipped"

	Если нет права "Просмотр" к объекту "Документ.[ИмяДокумента]" тогда
		Тогда я останавливаю выполнение сценария "Skipped"

	Дано я получаю список команд печати для объекта метаданных "Документ.[ИмяДокумента]" в переменную "СписокПечатныхФорм"
	Если '$СписокПечатныхФорм$.Количество() = 0' Тогда
		Тогда я останавливаю выполнение сценария "Skipped"

	И я ищу последние 5 документов "ИмяДокумента" по каждой организации в переменную "СписокДокументов"
	Если '$СписокДокументов$.Количество() = 0' Тогда
		Тогда я останавливаю выполнение сценария "Skipped"

	И для каждого значения "СсылкаДокумента" из массива "$СписокДокументов$"
		Дано я закрыл все окна клиентского приложения
		И я очищаю окно сообщений пользователю

		Тогда я запоминаю значение выражения 'ПолучитьНавигационнуюСсылку($СсылкаДокумента$)' в переменную "НавигационнаяСсылкаДокумента"
		Затем я открываю навигационную ссылку "$НавигационнаяСсылкаДокумента$"
		Если появилось предупреждение тогда
			Тогда я вызываю исключение "Не удалось открыть навигационную ссылку $НавигационнаяСсылкаДокумента$"
		И для каждого значения "ПечатнаяФормаОбъекта" из массива "$СписокПечатныхФорм$"
			Тогда я запоминаю значение выражения '$ПечатнаяФормаОбъекта$.Представление' в переменную "НаименованиеПечатнойФормы"
			Если элемент с заголовком "$НаименованиеПечатнойФормы$" присутствует на форме тогда
				Тогда я нажимаю на кнопку "$НаименованиеПечатнойФормы$"
				Если появилось предупреждение, содержащее текст 'Для выполнения команды "$НаименованиеПечатнойФормы$" документ будет проведен. Продолжить?' тогда
					Тогда я нажимаю на кнопку "Провести и продолжить"
				Если появилось предупреждение тогда
					Тогда я вызываю исключение "Не удалось напечатать форму $НаименованиеПечатнойФормы$ для документа $НавигационнаяСсылкаДокумента$"
				И я закрываю текущее окно
	
	И я закрыл все окна клиентского приложения

Сценарий: Заполнение нового документа "ИмяДокумента"
	Если объект "Документ.[ИмяДокумента]" недоступен по функциональным опциям
		Тогда я останавливаю выполнение сценария "Skipped"

	Если нет права "ИнтерактивноеДобавление" к объекту "Документ.[ИмяДокумента]" тогда
		Тогда я останавливаю выполнение сценария "Skipped"

	Дано я закрыл все окна клиентского приложения
	И я очищаю окно сообщений пользователю

	Дано я выполняю код и вставляю в переменную 'Новый Массив' "ДоступныеОрганизацииПодразделения"
	И я выполняю код встроенного языка 'Контекст.ДоступныеОрганизацииПодразделения.Добавить(Новый Структура("Организация, Подразделение", "Организация", "Подразделение"))'

	Дано я открываю основную форму списка справочника "Организации"
	Если появилось предупреждение тогда
		Тогда я вызываю исключение "Не удалось открыть основную форму списка справочника Организации"
	И я запоминаю значение таблицы "Список" как "ДоступныеОрганизации"
	| 'Наименование' |
	Дано я открываю основную форму списка справочника "ПодразделенияОрганизаций"
	Если появилось предупреждение тогда
		Тогда я вызываю исключение "Не удалось открыть основную форму списка справочника ПодразделенияОрганизаций"
	И для каждой строки таблицы '$ДоступныеОрганизации$' я выполняю
		Дано из выпадающего списка с именем "КомпоновщикНастроекПользовательскиеНастройкиЭлемент4Значение" я выбираю точное значение "$Наименование$"
		Дано я запоминаю значение поля с именем 'Наименование' таблицы 'Список' как 'НаименованиеПодразделения'
		И я выполняю код встроенного языка 'Контекст.ДоступныеОрганизацииПодразделения.Добавить(Новый Структура("Организация, Подразделение", "$Наименование$", "$НаименованиеПодразделения$"))'
	
	И для каждого значения "СтрокаТаблицы" из таблицы в памяти "ДоступныеОрганизацииПодразделения"
		Дано я закрыл все окна клиентского приложения
		И я очищаю окно сообщений пользователю

		Дано я открываю основную форму документа "ИмяДокумента"
		Если появилось предупреждение тогда
			Тогда я вызываю исключение "Не удалось открыть основную форму документа [ИмяДокумента]"

		И из выпадающего списка "Организация" я выбираю точное значение "$Организация$"
		И я нажимаю на кнопку "Заполнить"
		Если появилось предупреждение тогда
			Тогда я вызываю исключение "Не удалось перезаполнить документ $НавигационнаяСсылкаДокумента$"
		Если в текущем окне есть сообщения пользователю Тогда
			Тогда я вызываю исключение с текстом сообщения

		Если поле "Подразделение" существует тогда
			Дано я закрыл все окна клиентского приложения
			И я очищаю окно сообщений пользователю

			Дано я открываю основную форму документа "ИмяДокумента"
			Если появилось предупреждение тогда
				Тогда я вызываю исключение "Не удалось открыть основную форму документа [ИмяДокумента]"

			И из выпадающего списка "Организация" я выбираю точное значение "$Организация$"
			И в поле "Подразделение" я ввожу текст "$Подразделение$"
			И я нажимаю на кнопку "Заполнить"
			Если появилось предупреждение тогда
				Тогда я вызываю исключение "Не удалось перезаполнить документ $НавигационнаяСсылкаДокумента$"
			Если в текущем окне есть сообщения пользователю Тогда
				Тогда я вызываю исключение с текстом сообщения

	И я закрыл все окна клиентского приложения

Сценарий: Заполнение существующего документа "ИмяДокумента"
	Если объект "Документ.[ИмяДокумента]" недоступен по функциональным опциям
		Тогда я останавливаю выполнение сценария "Skipped"

	Если нет права "Редактирование" к объекту "Документ.[ИмяДокумента]" тогда
		Тогда я останавливаю выполнение сценария "Skipped"

	Дано я ищу последние 5 документов "ИмяДокумента" по каждой организации в переменную "СписокДокументов"
	Если '$СписокДокументов$.Количество() = 0' Тогда
		Тогда я останавливаю выполнение сценария "Skipped"

	И для каждого значения "СсылкаДокумента" из массива "$СписокДокументов$"
		Дано я закрыл все окна клиентского приложения
		И я очищаю окно сообщений пользователю

		Тогда я запоминаю значение выражения 'ПолучитьНавигационнуюСсылку($СсылкаДокумента$)' в переменную "НавигационнаяСсылкаДокумента"
		Затем я открываю навигационную ссылку "$НавигационнаяСсылкаДокумента$"
		Если появилось предупреждение тогда
			Тогда я вызываю исключение "Не удалось открыть навигационную ссылку $НавигационнаяСсылкаДокумента$"
		И я нажимаю на кнопку "Заполнить"
		Если появилось предупреждение содержащее текст "*родолжить?" по шаблону тогда
			Тогда я нажимаю на кнопку "Да"
		Если появилось предупреждение тогда
			Тогда я вызываю исключение "Не удалось перезаполнить документ $НавигационнаяСсылкаДокумента$"
		Если в текущем окне есть сообщения пользователю Тогда
			Тогда я вызываю исключение с текстом сообщения
	
	И я закрыл все окна клиентского приложения
	
