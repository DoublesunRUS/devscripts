/*******************************************************************************
 * Copyright (c) 2020 Alexander Kapralov and Contributors
 * This program and the accompanying materials are made available under
 * the terms of the BSD 3-Clause License which is available at
 * https://spdx.org/licenses/BSD-3-Clause.html#licenseText
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * Contributors:
 *    
 *
 ******************************************************************************/

конст НАЧАЛЬНАЯ_ВЕРСИЯ_ПЛАТФОРМЫ = "8.3.10"


метод Скрипт()
    знч имяПользователя = Консоль.СчитатьСтроку("Имя пользователя: ")
    знч парольПользователя = Консоль.СчитатьСтроку("Пароль пользователя: ")

    ОбновитьПлатформы(имяПользователя, парольПользователя)
;

метод ОбновитьПлатформы(имяПользователя: Строка, парольПользователя: Строка)
    знч используемыеВерсииПлатформы = ИспользуемыеВерсииПлатформы()

    знч установленныеВерсииПлатформы = УстановленныеВерсииПлатформы()

    знч последниеВерсииПлатформы = ПоследниеВерсииПлатформы(имяПользователя, парольПользователя)

    пер лишниеВерсииПлатформы: Множество
    лишниеВерсииПлатформы.ДобавитьВсе(установленныеВерсииПлатформы)
    лишниеВерсииПлатформы.УдалитьВсе(используемыеВерсииПлатформы)
    лишниеВерсииПлатформы.УдалитьВсе(последниеВерсииПлатформы)

    пер новыеВерсииПлатформы: Множество
    новыеВерсииПлатформы.ДобавитьВсе(используемыеВерсииПлатформы)
    новыеВерсииПлатформы.ДобавитьВсе(последниеВерсииПлатформы)
    новыеВерсииПлатформы.УдалитьВсе(установленныеВерсииПлатформы)

    для версияПлатформы из лишниеВерсииПлатформы
        Консоль.Записать("Необходимо удалить платформу %версияПлатформы")
    ;

    для версияПлатформы из новыеВерсииПлатформы
        Консоль.Записать("Необходимо установить платформу %версияПлатформы")
    ;
;

метод ИспользуемыеВерсииПлатформы(): Множество
    знч путьКИсполнителю = СредаИсполнения.ПолучитьСвойство("logback.configurationFile").Удалить("config/logback.xml") + "/bin/executor_j11.sh"

    знч библиотека = новый ПроцессОс(путьКИсполнителю, ["-s", "../Библиотеки/СписокИнформационныхБаз.sbsl", "-m",
        "ИспользуемыеВерсии"])

    библиотека.Запустить()

    пер используемыеВерсииПлатформы: Множество
    знч результатВыполненияСкрипта = новый ЧтениеДанных(библиотека.ПотокВывода)
    пока не результатВыполненияСкрипта.ЧтениеЗавершено()
        знч прочитаннаяСтрока = результатВыполненияСкрипта.ПрочитатьСтроку()

        если прочитаннаяСтрока == "" или прочитаннаяСтрока.ЧислоВхождений(".") != 3
        продолжить
        ;

        используемыеВерсииПлатформы.Добавить(прочитаннаяСтрока)
    ;

    возврат используемыеВерсииПлатформы
;

метод УстановленныеВерсииПлатформы(): Множество
    знч путьКИсполнителю = СредаИсполнения.ПолучитьСвойство("logback.configurationFile").Удалить("config/logback.xml") + "/bin/executor_j11.sh"

    знч библиотека = новый ПроцессОс(путьКИсполнителю, ["-s", "../Библиотеки/УстановленныеПлатформы83.sbsl", "-m",
        "Скрипт"])

    библиотека.Запустить()

    пер установленныеВерсииПлатформы: Множество
    знч результатВыполненияСкрипта = новый ЧтениеДанных(библиотека.ПотокВывода)
    пока не результатВыполненияСкрипта.ЧтениеЗавершено()
        знч прочитаннаяСтрока = результатВыполненияСкрипта.ПрочитатьСтроку()

        если прочитаннаяСтрока == ""
        продолжить
        ;

        установленныеВерсииПлатформы.Добавить(прочитаннаяСтрока.Подстрока(0, прочитаннаяСтрока.Найти("|")))
    ;

    возврат установленныеВерсииПлатформы
;

метод ПоследниеВерсииПлатформы(имяПользователя: Строка, парольПользователя: Строка): Множество
    знч путьКИсполнителю = СредаИсполнения.ПолучитьСвойство("logback.configurationFile").Удалить("config/logback.xml") + "/bin/executor_j11.sh"

    знч библиотека = новый ПроцессОс(путьКИсполнителю, ["-s", "../Библиотеки/ОпубликованныеПлатформы83.sbsl", "-m",
        "ПоследниеРелизы", имяПользователя, парольПользователя])

    библиотека.Запустить()

    пер последниеВерсииПлатформы: Множество
    знч результатВыполненияСкрипта = новый ЧтениеДанных(библиотека.ПотокВывода)
    пока не результатВыполненияСкрипта.ЧтениеЗавершено()
        знч прочитаннаяСтрока = результатВыполненияСкрипта.ПрочитатьСтроку()

        если прочитаннаяСтрока == ""
        продолжить
        ;

        последниеВерсииПлатформы.Добавить(прочитаннаяСтрока)
    ;

    возврат последниеВерсииПлатформы
;