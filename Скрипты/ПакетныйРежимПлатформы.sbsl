#!/usr/bin/executor

/*******************************************************************************
 * Copyright (c) 2020 Alexander Kapralov and Contributors
 * This program and the accompanying materials are made available under
 * the terms of the BSD 3-Clause License which is available at
 * https://spdx.org/licenses/BSD-3-Clause.html#licenseText
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * Contributors:
 *    
 *
 ******************************************************************************/

метод CreateInfobase(путьКИБ: Строка, имяФайлаПлатформы: Строка)
    пер параметрыПроцесса = новый Массив()
    параметрыПроцесса.Добавить("CREATEINFOBASE")
    параметрыПроцесса.Добавить("File=\"" + путьКИБ + "\"")

    ВыполнитьКомандуСистемы(имяФайлаПлатформы, параметрыПроцесса)
    Консоль.Записать("ИБ успешно создана.")
;

метод LoadConfigFromFiles(путьКФайламКонфигурации: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка)
    пер параметрыПроцесса = новый Массив()
    параметрыПроцесса.Добавить("DESIGNER")
    параметрыПроцесса.Добавить("/LoadConfigFromFiles")
    параметрыПроцесса.Добавить(путьКФайламКонфигурации)
    параметрыПроцесса.Добавить("/IBConnectionString")
    параметрыПроцесса.Добавить("File=\"" + путьКИБ + "\"")
    параметрыПроцесса.Добавить("/DisableStartupDialogs")
    параметрыПроцесса.Добавить("/WA-")

    ВыполнитьКомандуСистемы(имяФайлаПлатформы, параметрыПроцесса)
    Консоль.Записать("XML файлы конфигурации успешно загружены в ИБ.")
;

метод LoadCfg(путьКФайлуCF: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка)
    пер параметрыПроцесса = новый Массив()
    параметрыПроцесса.Добавить("DESIGNER")
    параметрыПроцесса.Добавить("/LoadCfg")
    параметрыПроцесса.Добавить(путьКФайлуCF)
    параметрыПроцесса.Добавить("/IBConnectionString")
    параметрыПроцесса.Добавить("File=\"" + путьКИБ + "\"")
    параметрыПроцесса.Добавить("/DisableStartupDialogs")
    параметрыПроцесса.Добавить("/WA-")

    ВыполнитьКомандуСистемы(имяФайлаПлатформы, параметрыПроцесса)
    Консоль.Записать("CF файл конфигурации успешно загружены в ИБ.")
;

метод UpdateDBCfg(путьКИБ: Строка, имяФайлаПлатформы: Строка)
    пер параметрыПроцесса = новый Массив()
    параметрыПроцесса.Добавить("DESIGNER")
    параметрыПроцесса.Добавить("/UpdateDBCfg")
    параметрыПроцесса.Добавить("/IBConnectionString")
    параметрыПроцесса.Добавить("File=\"" + путьКИБ + "\"")
    параметрыПроцесса.Добавить("/DisableStartupDialogs")
    параметрыПроцесса.Добавить("/WA-")

    ВыполнитьКомандуСистемы(имяФайлаПлатформы, параметрыПроцесса)
    Консоль.Записать("Конфигурация БД успешно обновлена для конфигурации в ИБ.")
;

метод CreateDistributionFiles(путьКФайлуCF: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка)
    пер параметрыПроцесса = новый Массив()
    параметрыПроцесса.Добавить("DESIGNER")
    параметрыПроцесса.Добавить("/CreateDistributionFiles")
    параметрыПроцесса.Добавить("-cffile")
    параметрыПроцесса.Добавить(путьКФайлуCF)
    параметрыПроцесса.Добавить("/IBConnectionString")
    параметрыПроцесса.Добавить("File=\"" + путьКИБ + "\"")
    параметрыПроцесса.Добавить("/DisableStartupDialogs")
    параметрыПроцесса.Добавить("/WA-")

    ВыполнитьКомандуСистемы(имяФайлаПлатформы, параметрыПроцесса)
    Консоль.Записать("CF Файл поставки успешно создан.")
;

метод LoadExtFromFiles(путьКФайламРасширения: Строка, имяРасширения: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка)
    пер параметрыПроцесса = новый Массив()
    параметрыПроцесса.Добавить("DESIGNER")
    параметрыПроцесса.Добавить("/LoadConfigFromFiles")
    параметрыПроцесса.Добавить(путьКФайламРасширения)
    параметрыПроцесса.Добавить("-Extension")
    параметрыПроцесса.Добавить(имяРасширения)
    параметрыПроцесса.Добавить("/IBConnectionString")
    параметрыПроцесса.Добавить("File=\"" + путьКИБ + "\"")
    параметрыПроцесса.Добавить("/DisableStartupDialogs")
    параметрыПроцесса.Добавить("/WA-")

    ВыполнитьКомандуСистемы(имяФайлаПлатформы, параметрыПроцесса)
    Консоль.Записать("XML файлы расширения успешно загружены в ИБ.")
;

метод LoadCfe(путьКФайлуCFE: Строка, имяРасширения: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка)
    пер параметрыПроцесса = новый Массив()
    параметрыПроцесса.Добавить("DESIGNER")
    параметрыПроцесса.Добавить("/LoadCfg")
    параметрыПроцесса.Добавить(путьКФайлуCFE)
    параметрыПроцесса.Добавить("-Extension")
    параметрыПроцесса.Добавить(имяРасширения)
    параметрыПроцесса.Добавить("/IBConnectionString")
    параметрыПроцесса.Добавить("File=\"" + путьКИБ + "\"")
    параметрыПроцесса.Добавить("/DisableStartupDialogs")
    параметрыПроцесса.Добавить("/WA-")

    ВыполнитьКомандуСистемы(имяФайлаПлатформы, параметрыПроцесса)
    Консоль.Записать("CFE файл расширения успешно загружены в ИБ.")
;

метод UpdateDBExt(имяРасширения: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка)
    пер параметрыПроцесса = новый Массив()
    параметрыПроцесса.Добавить("DESIGNER")
    параметрыПроцесса.Добавить("/UpdateDBCfg")
    параметрыПроцесса.Добавить("-Extension")
    параметрыПроцесса.Добавить(имяРасширения)
    параметрыПроцесса.Добавить("/IBConnectionString")
    параметрыПроцесса.Добавить("File=\"" + путьКИБ + "\"")
    параметрыПроцесса.Добавить("/DisableStartupDialogs")
    параметрыПроцесса.Добавить("/WA-")

    ВыполнитьКомандуСистемы(имяФайлаПлатформы, параметрыПроцесса)
    Консоль.Записать("Конфигурация БД успешно обновлена для расширения в ИБ.")
;

метод DumpDBExt(путьКФайлуCFE: Строка, имяРасширения: Строка, путьКИБ: Строка, имяФайлаПлатформы: Строка)
    пер параметрыПроцесса = новый Массив()
    параметрыПроцесса.Добавить("DESIGNER")
    параметрыПроцесса.Добавить("/DumpDBCfg")
    параметрыПроцесса.Добавить(путьКФайлуCFE)
    параметрыПроцесса.Добавить("-Extension")
    параметрыПроцесса.Добавить(имяРасширения)
    параметрыПроцесса.Добавить("/IBConnectionString")
    параметрыПроцесса.Добавить("File=\"" + путьКИБ + "\"")
    параметрыПроцесса.Добавить("/DisableStartupDialogs")
    параметрыПроцесса.Добавить("/WA-")

    ВыполнитьКомандуСистемы(имяФайлаПлатформы, параметрыПроцесса)
    Консоль.Записать("CFE Файл расширения успешно создан.")
;

метод ВыполнитьКомандуСистемы(имяКоманды: Строка, параметры: Массив, выводитьОшибки: Булево = Истина)
    знч временныйФайлЛогов = Файлы.СоздатьВременныйФайл()

    параметры.Добавить("/Out")
    параметры.Добавить(временныйФайлЛогов.Путь)

    знч процесс = новый ПроцессОс(имяКоманды, параметры)
    процесс.Запустить()
    процесс.ОжидатьЗавершения()

    пер результатВыполненияСкрипта = процесс.ПолучитьПотокВывода()
    знч текстРезультата = результатВыполненияСкрипта.ПрочитатьКакТекст()
    если не текстРезультата.Пусто()
        Консоль.Записать(текстРезультата)
    ;

    знч кодВозврата = процесс.ПолучитьКодВозврата()

    если кодВозврата == 0
    возврат
    ;

    пер текстОшибки = Строки.Шаблон("Код возврата: $0", кодВозврата)
    если не выводитьОшибки
        выбросить новый ИсключениеНедопустимоеСостояние(текстОшибки)
    ;

    знч ошибкиВыполненияСкрипта = временныйФайлЛогов.ОткрытьПотокЧтения()
    текстОшибки += "\в\н" + ошибкиВыполненияСкрипта.ПрочитатьКакТекст()
    выбросить новый ИсключениеНедопустимоеСостояние(текстОшибки)
;


перечисление ОперационныеСистемы
    Windows,
    MacOS,
    Linux
;


метод ИспользуемаяОС(): ОперационныеСистемы
    знч имяОС = СредаИсполнения.ПолучитьСвойство("os.name")

    выбор когда имяОС.НачинаетсяС("windows", Истина)
        возврат ОперационныеСистемы.Windows

    когда имяОС.Содержит("mac", Истина)
        возврат ОперационныеСистемы.MacOS

    когда имяОС.Содержит("nux", Истина)
        возврат ОперационныеСистемы.Linux

    иначе
        выбросить новый ИсключениеНедопустимоеСостояние("Неизвестная ОС")
    ;
;