#!/usr/bin/executor

/*******************************************************************************
 * Copyright (c) 2020 Alexander Kapralov and Contributors
 * This program and the accompanying materials are made available under
 * the terms of the BSD 3-Clause License which is available at
 * https://spdx.org/licenses/BSD-3-Clause.html#licenseText
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * Contributors:
 *    
 *
 ******************************************************************************/

метод Скрипт()
    пер имяКоманды = ""
    пер параметрыПроцесса = новый Массив()

    знч версияОС = ИспользуемаяОС()
    выбор версияОС
    когда ОперационныеСистемы.Windows
        имяКоманды = "ring.cmd"
    иначе
        имяКоманды = "ring.sh"
    ;

    параметрыПроцесса.Добавить("-l")
    параметрыПроцесса.Добавить("error")
    параметрыПроцесса.Добавить("edt")
    параметрыПроцесса.Добавить("platform-versions")

    ВыполнитьКомандуСистемы(имяКоманды, параметрыПроцесса)
;

метод ВыполнитьКомандуСистемы(имяКоманды: Строка, параметры: Массив)
    знч процесс = новый ПроцессОс(имяКоманды, параметры, Ложь)
    процесс.Запустить()
    процесс.ОжидатьЗавершения()

    знч кодВозврата = процесс.ПолучитьКодВозврата()
    Консоль.Записать("Код возврата:" + кодВозврата)

    пер результатВыполненияСкрипта = процесс.ПолучитьПотокВывода()
    знч текстРезультата = результатВыполненияСкрипта.ПрочитатьКакТекст(КодировкаПотокаВывода())
    если не текстРезультата.Пусто()
        Консоль.Записать("Поток вывода:")
        Консоль.Записать(текстРезультата)
    ;

    пер ошибкиВыполненияСкрипта = процесс.ПолучитьПотокОшибок()
    знч текстОшибок = ошибкиВыполненияСкрипта.ПрочитатьКакТекст(КодировкаПотокаВывода())
    если не текстОшибок.Пусто()
        Консоль.Записать("Поток ошибок:")
        Консоль.Записать(текстОшибок)
    ;
;

метод КодировкаПотокаВывода(): Строка
    возврат "Cp1251"
;


перечисление ОперационныеСистемы
    Windows,
    MacOS,
    Linux
;


метод ИспользуемаяОС(): ОперационныеСистемы
    знч имяОС = СредаИсполнения.ПолучитьСвойство("os.name")

    выбор когда имяОС.НачинаетсяС("windows", Истина)
        возврат ОперационныеСистемы.Windows

    когда имяОС.Содержит("mac", Истина)
        возврат ОперационныеСистемы.MacOS

    когда имяОС.Содержит("nux", Истина)
        возврат ОперационныеСистемы.Linux

    иначе
        выбросить новый ИсключениеНедопустимоеСостояние("Неизвестная ОС")
    ;
;